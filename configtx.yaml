Organizations:
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererOrg

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: ../organizations/ordererOrganizations/{{ orderer.orderer_name | lower }}.{{ orderer.orderer_domain }}/msp

        # Policies defines the set of policies at this level of the config tree
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

        OrdererEndpoints:
            - {{ orderer.orderer_name | lower }}.{{ orderer.orderer_domain }}:7050
{% for peer in peerorgs %}
    - &{{ peer.peer_name }}
        Name: {{ peer.peer_name }}MSP
        ID: {{ peer.peer_name }}MSP
        MSPDir: ../organizations/peerOrganizations/{{ peer.peer_name | lower }}.{{ peer.peer_domain }}/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('{{ peer.peer_name }}MSP.admin', '{{ peer.peer_name }}MSP.peer', '{{ peer.peer_name }}MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('{{ peer.peer_name }}MSP.admin', '{{ peer.peer_name }}MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('{{ peer.peer_name }}MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('{{ peer.peer_name }}MSP.peer')"
        AnchorPeers:
            - Host: peer0.{{ peer.peer_name | lower }}.{{ peer.peer_domain }}
              Port: {{ peer.peers[0].port }}
{% endfor %}
################################################################################
Capabilities:
    Channel: &ChannelCapabilities
        V2_0: true

    Orderer: &OrdererCapabilities
        V2_0: true

    Application: &ApplicationCapabilities
        V2_0: true
################################################################################
Application: &ApplicationDefaults
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
Orderer: &OrdererDefaults
    OrdererType: etcdraft

    EtcdRaft:
        Consenters:
        - Host: {{ orderer.orderer_name | lower }}.{{ orderer.orderer_domain }}
          Port: {{ orderer.port }}
          ClientTLSCert: ../organizations/ordererOrganizations/{{ orderer.orderer_domain }}/orderers/{{ orderer.orderer_name | lower }}.{{ orderer.orderer_domain }}/tls/server.crt
          ServerTLSCert: ../organizations/ordererOrganizations/{{ orderer.orderer_domain }}/orderers/{{ orderer.orderer_name | lower }}.{{ orderer.orderer_domain }}/tls/server.crt

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s
    # Batch Size: Controls the number of messages batched into a block
    BatchSize:
        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10
        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB
        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB
    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:
    # Policies defines the set of policies at this level of the config tree
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities
################################################################################
Profiles:

    TwoOrgsOrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
{% for peer in peerorgs %}
                    - *{{ peer.peer_name }}
{% endfor %}
    TwoOrgsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
{% for peer in peerorgs %}
                - *{{ peer.peer_name }}
{% endfor %}
            Capabilities:
                <<: *ApplicationCapabilities