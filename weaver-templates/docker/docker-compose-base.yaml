version: '2'

volumes:
  {{ orderer.orderer_name | lower }}.{{ orderer.orderer_domain }}:
{%- for peer in peerorgs %}
{%- for peernode in peer.peernodes %}
  peer{{ loop.index0 }}.{{ peer.peer_name | lower }}.{{ peer.peer_domain }}:
{%- endfor %}
{%- endfor %}

networks:
  {{ base_network_name }}:

services:
  {% set orderer_container = (orderer.orderer_name | lower) ~ '.' ~ (orderer.orderer_domain) -%}
  {{ orderer_container }}:
    container_name: {{ orderer_container }}
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT={{ orderer.port }}
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID={{ orderer.orderer_name }}MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../organizations/ordererOrganizations/{{ orderer.orderer_domain }}/orderers/{{ orderer_container }}/msp:/var/hyperledger/orderer/msp
        - ../organizations/ordererOrganizations/{{ orderer.orderer_domain }}/orderers/{{ orderer_container }}/tls/:/var/hyperledger/orderer/tls
        - {{ orderer_container }}:/var/hyperledger/production/orderer
    ports:
      - {{ orderer.port }}:{{ orderer.port }}
    networks:
      - {{ base_network_name }}
  
{% for peer in peerorgs %}
  {% set peer_container = (peer.peer_name| lower) ~ '.' ~ (peer.peer_domain) -%}
{% for peernode in peer.peernodes %}
  {% set node_container = 'peer' ~ (loop.index0) ~ '.' ~ (peer_container) -%}
  {{ node_container }}:
    container_name: {{ node_container }}
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID={{ node_container }}
      - CORE_PEER_ADDRESS={{ node_container }}:{{ peernode.port }}
      - CORE_PEER_LISTENADDRESS=0.0.0.0:{{ peernode.port }}
      - CORE_PEER_CHAINCODEADDRESS={{ node_container }}:{{ peernode.CCport }}
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:{{ peernode.CCport }}
      - CORE_PEER_GOSSIP_BOOTSTRAP={{ node_container }}:{{ peernode.port }}
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT={{ node_container }}:{{ peernode.port }}
      - CORE_PEER_LOCALMSPID={{ peer.peer_name }}MSP
    volumes:
        - /var/run/:/host/var/run/
        - ../organizations/peerOrganizations/{{ peer_container }}/peers/{{ node_container }}/msp:/etc/hyperledger/fabric/msp
        - ../organizations/peerOrganizations/{{ peer_container }}/peers/{{ node_container }}/tls:/etc/hyperledger/fabric/tls
        - {{ node_container }}:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - {{ peernode.port }}:{{ peernode.port }}
    networks:
      - {{ base_network_name }}
{%- endfor %}
{%- endfor %}
